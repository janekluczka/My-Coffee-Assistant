package com.luczka.mycoffee.data.local.entity

import androidx.room.Entity
import androidx.room.PrimaryKey
import com.luczka.mycoffee.data.local.type.ProcessType
import com.luczka.mycoffee.data.local.type.RoastType
import java.time.LocalDate

/**
 * Represents a coffee item in the data layer.
 *
 * @property coffeeId The unique ID of the coffee, auto-generated by the database.
 * @property name The name of the coffee.
 * @property brand The brand of the coffee.
 * @property scaScore The SCA (Specialty Coffee Association) score of the coffee, if available.
 * @property roast The roast level of the coffee, represented by the RoastType enum.
 * @property process The processing method of the coffee, represented by the ProcessType enum.
 * @property isFavourite Indicates whether the coffee is marked as a favorite.
 */
@Entity
data class  CoffeeEntity(
    @PrimaryKey(autoGenerate = true)
    val coffeeId: Long,
    val brand: String,
    val name: String,
    val roast: RoastType?,
    val process: ProcessType?,
    val plantation: String?,
    val altitude: Int?,
    val scaScore: Float?,
    val additionalInformation: String?,
    val isFavourite: Boolean,
    val updatedOn: LocalDate,
    val addedOn: LocalDate
) : Comparable<CoffeeEntity> {

    override fun compareTo(other: CoffeeEntity): Int {
        return compareBy<CoffeeEntity>(
            { it.isFavourite },
            { it.name },
            { it.brand },
            { it.coffeeId }
        ).compare(this, other)
    }

    companion object {
        const val KEY_COLUMN = "coffeeId"
    }
}