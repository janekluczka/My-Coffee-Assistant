package com.luczka.mycoffee.data.local.entity

import androidx.room.Entity
import androidx.room.PrimaryKey
import com.luczka.mycoffee.data.local.type.CoffeeMachineType
import com.luczka.mycoffee.data.local.type.GrinderType
import java.time.LocalDate

/**
 * Represents coffee equipment as a sealed class.
 *
 * This sealed class is used to model different types of coffee equipment, such as coffee machines and grinders.
 * Each subtype represents a specific type of equipment with shared properties and some unique characteristics.
 */
sealed class EquipmentEntity {
    abstract val name: String
    abstract val brand: String?
    abstract val boughtOn: LocalDate?
    abstract val price: Float?
    abstract val receiptId: Long?

    /**
     * Represents an electric coffee machine.
     *
     * This class models a coffee machine with various types such as Espresso, Pod, or Drip.
     * The type of the machine determines its brewing method.
     *
     * @property coffeeMachineId The unique ID of the coffee machine, auto-generated by the database.
     * @property name The name of the equipment.
     * @property brand The brand of the equipment, if applicable.
     * @property boughtOn The date when the equipment was purchased, if available.
     * @property price The purchase price of the equipment, if available.
     * @property receiptId The ID of the associated receipt, if applicable.
     * @property type The type of the coffee machine (e.g., Espresso, Pod, Drip).
     */
    @Entity
    data class CoffeeMachineEntity(
        @PrimaryKey(autoGenerate = true)
        val coffeeMachineId: Long,
        override val name: String,
        override val brand: String?,
        override val boughtOn: LocalDate?,
        override val price: Float?,
        override val receiptId: Long?,
        val type: CoffeeMachineType
    ) : EquipmentEntity()

    /**
     * Represents a coffee grinder.
     *
     * This class models a coffee grinder, which can be either Manual or Automatic.
     * The grinder type indicates whether the grinder is operated by hand or powered by electricity.
     *
     * @property grinderId The unique ID of the coffee grinder, auto-generated by the database.
     * @property name The name of the equipment.
     * @property brand The brand of the equipment, if applicable.
     * @property boughtOn The date when the equipment was purchased, if available.
     * @property price The purchase price of the equipment, if available.
     * @property receiptId The ID of the associated receipt, if applicable.
     * @property type The type of the grinder (Manual or Automatic).
     */
    @Entity
    data class GrinderEntity(
        @PrimaryKey(autoGenerate = true)
        val grinderId: Long,
        override val name: String,
        override val brand: String?,
        override val boughtOn: LocalDate?,
        override val price: Float?,
        override val receiptId: Long?,
        val type: GrinderType
    ) : EquipmentEntity()
}
